AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Egg Price Tracker Stack
  - S3 bucket for storing a persistent CSV file and an index.html report.
  - Lambda function (Python 3.13) that collects egg prices daily and generates a static HTML report.
  - The index.html is published as a public static website.

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket to store the egg price CSV and index.html.
    Default: eggciting

Resources:
  ## S3 Bucket for storing the CSV file and HTML report
  EggPricesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
      VersioningConfiguration:
        Status: Enabled

  ## Bucket Policy to make index.html publicly readable
  EggPricesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EggPricesBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${S3BucketName}/index.html"

  ## IAM Role for the Lambda function
  EggPricesLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EggPricesLambdaRoleFixed
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EggPricesPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${S3BucketName}"
                  - !Sub "arn:aws:s3:::${S3BucketName}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "arn:aws:secretsmanager:*:*:secret:my/kroger/api/keys-*"

  ## Lambda Function for Egg Price Tracking and HTML Report Generation
  EggPricesLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: EggPricesTracker
      Handler: app.lambda_handler
      Runtime: python3.13
      CodeUri: egg_price_tracker
      MemorySize: 256
      Timeout: 300
      Role: !GetAtt EggPricesLambdaRole.Arn
      Environment:
        Variables:
          S3_BUCKET: !Ref S3BucketName
      Events:
        DailyTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
            Name: EggPrgPricesDailyTrigger

Outputs:
  LambdaFunction:
    Description: "Egg Prices Tracker Lambda Function"
    Value: !Ref EggPricesLambdaFunction
  S3BucketWebsiteURL:
    Description: "URL for the static website (index.html) in the S3 bucket"
    Value: !GetAtt EggPricesBucket.WebsiteURL